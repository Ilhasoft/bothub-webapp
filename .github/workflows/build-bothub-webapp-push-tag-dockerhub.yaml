name: Build Bothub WebApp (Push Tag)

on:
  push:
    tags:
      - 'v*.*.*-develop*'
      - 'v*.*.*-staging*'
      - 'v*.*.*'

env:
  DOCKER_IMAGE: bothubit/bothub-webapp

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.meta.outputs.version }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_IMAGE }}
          tags: type=ref,event=tag
          flavor: latest=false

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          labels: ${{ steps.meta.outputs.labels }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          no-cache: true

  deploy:
    env:
      MANIFESTS_APPLICATION: webapp
      MANIFESTS_REPOSITORY: weni-ai/kubernetes-manifests-artificial-intelligence
      MANIFESTS_PATCH_TARGET: deployment-webapp.json
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Check out Kubernetes Manifests
        uses: actions/checkout@v3
        with:
          ref: main
          repository: "${{ env.MANIFESTS_REPOSITORY }}"
          token: "${{ secrets.DEVOPS_GITHUB_PERMANENT_TOKEN }}"
          path: ./kubernetes-manifests/

      - name: Update image on deployment
        env:
          IMAGE_TAG: ${{ env.DOCKER_IMAGE }}:${{ needs.build_and_push.outputs.version }}
          IMAGE_VERSION: ${{ needs.build_and_push.outputs.version }}
        working-directory: kubernetes-manifests/${{ env.MANIFESTS_APPLICATION }}
        run: |
          which jq > /dev/null 2>&1 || (sudo apt update && sudo apt install -y jq)

          # Dep: coreutils
          verlte() {
            [ "$1" = "$(echo -e "$1\n$2" | sort -V | head -n1)" ]
          }

          verlt() {
            [ "$1" = "$2" ] && return 1 || verlte $1 $2
          }


          ENV_DIR=$(echo $IMAGE_VERSION | grep -Eo 'staging|develop' || echo 'production')
          for e in ${ENV_DIR}; do
            echo "Update ${e}:"

            if [ ! -d "${e}" ]; then
              echo "${e}: Does not exist, skipping"
            elif [ ! -r "${e}/kustomization.yaml" ] || [ ! -r "${e}/${{ env.MANIFESTS_PATCH_TARGET }}" ]; then
              echo "${e}/kustomization.yaml or ${e}/${{ env.MANIFESTS_PATCH_TARGET }}: Not readable, skipping"
            else
              OLD_IMAGE=$(cat "${e}/${{ env.MANIFESTS_PATCH_TARGET }}" | jq '.[] | select(.path == "/spec/template/spec/containers/0/image") | .value')
              echo "Old image to replace: ${OLD_IMAGE}"

              OLD_VERSION=$(echo "${OLD_IMAGE}" | sed s'/^.*[v:-]\([0-9]*\.[0-9]*\.[0-9]*\).*$/\1/'g | head -n1)
              echo "Old image version to compare: ${OLD_VERSION} <= ${{ env.IMAGE_VERSION }}"

              if verlte "${OLD_VERSION}" "${{ env.IMAGE_VERSION }}"; then
                new_configuration=$(cat "${e}/${{ env.MANIFESTS_PATCH_TARGET }}" | jq '(..|select(.path == "/spec/template/spec/containers/0/image")?) += {value: "'"${{ env.IMAGE_TAG }}"'"}')
                echo "New configuration:\n${new_configuration}"
                echo "${new_configuration}" >"${e}/${{ env.MANIFESTS_PATCH_TARGET }}"
              else
                echo "Version in file is greater than build, skipping update yaml"
              fi
            fi
          done

      - name: Commit & Push changes
        uses: actions-js/push@master
        with:
          github_token: ${{ secrets.DEVOPS_GITHUB_PERMANENT_TOKEN }}
          repository: "${{ env.MANIFESTS_REPOSITORY }}"
          directory: ./kubernetes-manifests/
          branch: main
          message: "From Bothub WebApp Build (Push-Tag)"
